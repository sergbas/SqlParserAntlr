//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.7
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace SqlParserAntlr
{
    // Generated from C:/Projects/SqlParserAntlr/SqlParserAntlr/JsParser\JavaScriptParser.g4 by ANTLR 4.7

    // Unreachable code detected
#pragma warning disable 0162
    // The variable '...' is assigned but its value is never used
#pragma warning disable 0219
    // Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
    // Ambiguous reference in cref attribute
#pragma warning disable 419

    using Antlr4.Runtime.Misc;
    using Antlr4.Runtime.Tree;
    using IToken = Antlr4.Runtime.IToken;

    /// <summary>
    /// This interface defines a complete generic visitor for a parse tree produced
    /// by <see cref="JavaScriptParser"/>.
    /// </summary>
    /// <typeparam name="Result">The return type of the visit operation.</typeparam>
    [System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.7.1")]
    [System.CLSCompliant(false)]
    public interface IJavaScriptParserVisitor<Result> : IParseTreeVisitor<Result>
    {
        /// <summary>
        /// Visit a parse tree produced by <see cref="JavaScriptParser.program"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitProgram([NotNull] JavaScriptParser.ProgramContext context);
        /// <summary>
        /// Visit a parse tree produced by <see cref="JavaScriptParser.sourceElement"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitSourceElement([NotNull] JavaScriptParser.SourceElementContext context);
        /// <summary>
        /// Visit a parse tree produced by <see cref="JavaScriptParser.statement"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitStatement([NotNull] JavaScriptParser.StatementContext context);
        /// <summary>
        /// Visit a parse tree produced by <see cref="JavaScriptParser.block"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitBlock([NotNull] JavaScriptParser.BlockContext context);
        /// <summary>
        /// Visit a parse tree produced by <see cref="JavaScriptParser.statementList"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitStatementList([NotNull] JavaScriptParser.StatementListContext context);
        /// <summary>
        /// Visit a parse tree produced by <see cref="JavaScriptParser.variableStatement"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitVariableStatement([NotNull] JavaScriptParser.VariableStatementContext context);
        /// <summary>
        /// Visit a parse tree produced by <see cref="JavaScriptParser.variableDeclarationList"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitVariableDeclarationList([NotNull] JavaScriptParser.VariableDeclarationListContext context);
        /// <summary>
        /// Visit a parse tree produced by <see cref="JavaScriptParser.variableDeclaration"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitVariableDeclaration([NotNull] JavaScriptParser.VariableDeclarationContext context);
        /// <summary>
        /// Visit a parse tree produced by <see cref="JavaScriptParser.emptyStatement"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitEmptyStatement([NotNull] JavaScriptParser.EmptyStatementContext context);
        /// <summary>
        /// Visit a parse tree produced by <see cref="JavaScriptParser.expressionStatement"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitExpressionStatement([NotNull] JavaScriptParser.ExpressionStatementContext context);
        /// <summary>
        /// Visit a parse tree produced by <see cref="JavaScriptParser.ifStatement"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitIfStatement([NotNull] JavaScriptParser.IfStatementContext context);
        /// <summary>
        /// Visit a parse tree produced by the <c>DoStatement</c>
        /// labeled alternative in <see cref="JavaScriptParser.iterationStatement"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitDoStatement([NotNull] JavaScriptParser.DoStatementContext context);
        /// <summary>
        /// Visit a parse tree produced by the <c>WhileStatement</c>
        /// labeled alternative in <see cref="JavaScriptParser.iterationStatement"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitWhileStatement([NotNull] JavaScriptParser.WhileStatementContext context);
        /// <summary>
        /// Visit a parse tree produced by the <c>ForStatement</c>
        /// labeled alternative in <see cref="JavaScriptParser.iterationStatement"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitForStatement([NotNull] JavaScriptParser.ForStatementContext context);
        /// <summary>
        /// Visit a parse tree produced by the <c>ForVarStatement</c>
        /// labeled alternative in <see cref="JavaScriptParser.iterationStatement"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitForVarStatement([NotNull] JavaScriptParser.ForVarStatementContext context);
        /// <summary>
        /// Visit a parse tree produced by the <c>ForInStatement</c>
        /// labeled alternative in <see cref="JavaScriptParser.iterationStatement"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitForInStatement([NotNull] JavaScriptParser.ForInStatementContext context);
        /// <summary>
        /// Visit a parse tree produced by the <c>ForVarInStatement</c>
        /// labeled alternative in <see cref="JavaScriptParser.iterationStatement"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitForVarInStatement([NotNull] JavaScriptParser.ForVarInStatementContext context);
        /// <summary>
        /// Visit a parse tree produced by <see cref="JavaScriptParser.varModifier"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitVarModifier([NotNull] JavaScriptParser.VarModifierContext context);
        /// <summary>
        /// Visit a parse tree produced by <see cref="JavaScriptParser.continueStatement"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitContinueStatement([NotNull] JavaScriptParser.ContinueStatementContext context);
        /// <summary>
        /// Visit a parse tree produced by <see cref="JavaScriptParser.breakStatement"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitBreakStatement([NotNull] JavaScriptParser.BreakStatementContext context);
        /// <summary>
        /// Visit a parse tree produced by <see cref="JavaScriptParser.returnStatement"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitReturnStatement([NotNull] JavaScriptParser.ReturnStatementContext context);
        /// <summary>
        /// Visit a parse tree produced by <see cref="JavaScriptParser.withStatement"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitWithStatement([NotNull] JavaScriptParser.WithStatementContext context);
        /// <summary>
        /// Visit a parse tree produced by <see cref="JavaScriptParser.switchStatement"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitSwitchStatement([NotNull] JavaScriptParser.SwitchStatementContext context);
        /// <summary>
        /// Visit a parse tree produced by <see cref="JavaScriptParser.caseBlock"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitCaseBlock([NotNull] JavaScriptParser.CaseBlockContext context);
        /// <summary>
        /// Visit a parse tree produced by <see cref="JavaScriptParser.caseClauses"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitCaseClauses([NotNull] JavaScriptParser.CaseClausesContext context);
        /// <summary>
        /// Visit a parse tree produced by <see cref="JavaScriptParser.caseClause"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitCaseClause([NotNull] JavaScriptParser.CaseClauseContext context);
        /// <summary>
        /// Visit a parse tree produced by <see cref="JavaScriptParser.defaultClause"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitDefaultClause([NotNull] JavaScriptParser.DefaultClauseContext context);
        /// <summary>
        /// Visit a parse tree produced by <see cref="JavaScriptParser.labelledStatement"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitLabelledStatement([NotNull] JavaScriptParser.LabelledStatementContext context);
        /// <summary>
        /// Visit a parse tree produced by <see cref="JavaScriptParser.throwStatement"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitThrowStatement([NotNull] JavaScriptParser.ThrowStatementContext context);
        /// <summary>
        /// Visit a parse tree produced by <see cref="JavaScriptParser.tryStatement"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitTryStatement([NotNull] JavaScriptParser.TryStatementContext context);
        /// <summary>
        /// Visit a parse tree produced by <see cref="JavaScriptParser.catchProduction"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitCatchProduction([NotNull] JavaScriptParser.CatchProductionContext context);
        /// <summary>
        /// Visit a parse tree produced by <see cref="JavaScriptParser.finallyProduction"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitFinallyProduction([NotNull] JavaScriptParser.FinallyProductionContext context);
        /// <summary>
        /// Visit a parse tree produced by <see cref="JavaScriptParser.debuggerStatement"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitDebuggerStatement([NotNull] JavaScriptParser.DebuggerStatementContext context);
        /// <summary>
        /// Visit a parse tree produced by <see cref="JavaScriptParser.functionDeclaration"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitFunctionDeclaration([NotNull] JavaScriptParser.FunctionDeclarationContext context);
        /// <summary>
        /// Visit a parse tree produced by <see cref="JavaScriptParser.classDeclaration"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitClassDeclaration([NotNull] JavaScriptParser.ClassDeclarationContext context);
        /// <summary>
        /// Visit a parse tree produced by <see cref="JavaScriptParser.classTail"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitClassTail([NotNull] JavaScriptParser.ClassTailContext context);
        /// <summary>
        /// Visit a parse tree produced by <see cref="JavaScriptParser.classElement"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitClassElement([NotNull] JavaScriptParser.ClassElementContext context);
        /// <summary>
        /// Visit a parse tree produced by <see cref="JavaScriptParser.methodDefinition"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitMethodDefinition([NotNull] JavaScriptParser.MethodDefinitionContext context);
        /// <summary>
        /// Visit a parse tree produced by <see cref="JavaScriptParser.generatorMethod"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitGeneratorMethod([NotNull] JavaScriptParser.GeneratorMethodContext context);
        /// <summary>
        /// Visit a parse tree produced by <see cref="JavaScriptParser.formalParameterList"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitFormalParameterList([NotNull] JavaScriptParser.FormalParameterListContext context);
        /// <summary>
        /// Visit a parse tree produced by <see cref="JavaScriptParser.formalParameterArg"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitFormalParameterArg([NotNull] JavaScriptParser.FormalParameterArgContext context);
        /// <summary>
        /// Visit a parse tree produced by <see cref="JavaScriptParser.lastFormalParameterArg"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitLastFormalParameterArg([NotNull] JavaScriptParser.LastFormalParameterArgContext context);
        /// <summary>
        /// Visit a parse tree produced by <see cref="JavaScriptParser.functionBody"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitFunctionBody([NotNull] JavaScriptParser.FunctionBodyContext context);
        /// <summary>
        /// Visit a parse tree produced by <see cref="JavaScriptParser.sourceElements"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitSourceElements([NotNull] JavaScriptParser.SourceElementsContext context);
        /// <summary>
        /// Visit a parse tree produced by <see cref="JavaScriptParser.arrayLiteral"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitArrayLiteral([NotNull] JavaScriptParser.ArrayLiteralContext context);
        /// <summary>
        /// Visit a parse tree produced by <see cref="JavaScriptParser.elementList"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitElementList([NotNull] JavaScriptParser.ElementListContext context);
        /// <summary>
        /// Visit a parse tree produced by <see cref="JavaScriptParser.lastElement"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitLastElement([NotNull] JavaScriptParser.LastElementContext context);
        /// <summary>
        /// Visit a parse tree produced by <see cref="JavaScriptParser.objectLiteral"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitObjectLiteral([NotNull] JavaScriptParser.ObjectLiteralContext context);
        /// <summary>
        /// Visit a parse tree produced by the <c>PropertyExpressionAssignment</c>
        /// labeled alternative in <see cref="JavaScriptParser.propertyAssignment"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitPropertyExpressionAssignment([NotNull] JavaScriptParser.PropertyExpressionAssignmentContext context);
        /// <summary>
        /// Visit a parse tree produced by the <c>ComputedPropertyExpressionAssignment</c>
        /// labeled alternative in <see cref="JavaScriptParser.propertyAssignment"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitComputedPropertyExpressionAssignment([NotNull] JavaScriptParser.ComputedPropertyExpressionAssignmentContext context);
        /// <summary>
        /// Visit a parse tree produced by the <c>PropertyGetter</c>
        /// labeled alternative in <see cref="JavaScriptParser.propertyAssignment"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitPropertyGetter([NotNull] JavaScriptParser.PropertyGetterContext context);
        /// <summary>
        /// Visit a parse tree produced by the <c>PropertySetter</c>
        /// labeled alternative in <see cref="JavaScriptParser.propertyAssignment"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitPropertySetter([NotNull] JavaScriptParser.PropertySetterContext context);
        /// <summary>
        /// Visit a parse tree produced by the <c>MethodProperty</c>
        /// labeled alternative in <see cref="JavaScriptParser.propertyAssignment"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitMethodProperty([NotNull] JavaScriptParser.MethodPropertyContext context);
        /// <summary>
        /// Visit a parse tree produced by the <c>PropertyShorthand</c>
        /// labeled alternative in <see cref="JavaScriptParser.propertyAssignment"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitPropertyShorthand([NotNull] JavaScriptParser.PropertyShorthandContext context);
        /// <summary>
        /// Visit a parse tree produced by <see cref="JavaScriptParser.propertyName"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitPropertyName([NotNull] JavaScriptParser.PropertyNameContext context);
        /// <summary>
        /// Visit a parse tree produced by <see cref="JavaScriptParser.arguments"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitArguments([NotNull] JavaScriptParser.ArgumentsContext context);
        /// <summary>
        /// Visit a parse tree produced by <see cref="JavaScriptParser.lastArgument"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitLastArgument([NotNull] JavaScriptParser.LastArgumentContext context);
        /// <summary>
        /// Visit a parse tree produced by <see cref="JavaScriptParser.expressionSequence"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitExpressionSequence([NotNull] JavaScriptParser.ExpressionSequenceContext context);
        /// <summary>
        /// Visit a parse tree produced by the <c>TemplateStringExpression</c>
        /// labeled alternative in <see cref="JavaScriptParser.singleExpression"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitTemplateStringExpression([NotNull] JavaScriptParser.TemplateStringExpressionContext context);
        /// <summary>
        /// Visit a parse tree produced by the <c>TernaryExpression</c>
        /// labeled alternative in <see cref="JavaScriptParser.singleExpression"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitTernaryExpression([NotNull] JavaScriptParser.TernaryExpressionContext context);
        /// <summary>
        /// Visit a parse tree produced by the <c>LogicalAndExpression</c>
        /// labeled alternative in <see cref="JavaScriptParser.singleExpression"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitLogicalAndExpression([NotNull] JavaScriptParser.LogicalAndExpressionContext context);
        /// <summary>
        /// Visit a parse tree produced by the <c>PreIncrementExpression</c>
        /// labeled alternative in <see cref="JavaScriptParser.singleExpression"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitPreIncrementExpression([NotNull] JavaScriptParser.PreIncrementExpressionContext context);
        /// <summary>
        /// Visit a parse tree produced by the <c>ObjectLiteralExpression</c>
        /// labeled alternative in <see cref="JavaScriptParser.singleExpression"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitObjectLiteralExpression([NotNull] JavaScriptParser.ObjectLiteralExpressionContext context);
        /// <summary>
        /// Visit a parse tree produced by the <c>InExpression</c>
        /// labeled alternative in <see cref="JavaScriptParser.singleExpression"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitInExpression([NotNull] JavaScriptParser.InExpressionContext context);
        /// <summary>
        /// Visit a parse tree produced by the <c>LogicalOrExpression</c>
        /// labeled alternative in <see cref="JavaScriptParser.singleExpression"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitLogicalOrExpression([NotNull] JavaScriptParser.LogicalOrExpressionContext context);
        /// <summary>
        /// Visit a parse tree produced by the <c>NotExpression</c>
        /// labeled alternative in <see cref="JavaScriptParser.singleExpression"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitNotExpression([NotNull] JavaScriptParser.NotExpressionContext context);
        /// <summary>
        /// Visit a parse tree produced by the <c>PreDecreaseExpression</c>
        /// labeled alternative in <see cref="JavaScriptParser.singleExpression"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitPreDecreaseExpression([NotNull] JavaScriptParser.PreDecreaseExpressionContext context);
        /// <summary>
        /// Visit a parse tree produced by the <c>ArgumentsExpression</c>
        /// labeled alternative in <see cref="JavaScriptParser.singleExpression"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitArgumentsExpression([NotNull] JavaScriptParser.ArgumentsExpressionContext context);
        /// <summary>
        /// Visit a parse tree produced by the <c>ThisExpression</c>
        /// labeled alternative in <see cref="JavaScriptParser.singleExpression"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitThisExpression([NotNull] JavaScriptParser.ThisExpressionContext context);
        /// <summary>
        /// Visit a parse tree produced by the <c>FunctionExpression</c>
        /// labeled alternative in <see cref="JavaScriptParser.singleExpression"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitFunctionExpression([NotNull] JavaScriptParser.FunctionExpressionContext context);
        /// <summary>
        /// Visit a parse tree produced by the <c>UnaryMinusExpression</c>
        /// labeled alternative in <see cref="JavaScriptParser.singleExpression"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitUnaryMinusExpression([NotNull] JavaScriptParser.UnaryMinusExpressionContext context);
        /// <summary>
        /// Visit a parse tree produced by the <c>AssignmentExpression</c>
        /// labeled alternative in <see cref="JavaScriptParser.singleExpression"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitAssignmentExpression([NotNull] JavaScriptParser.AssignmentExpressionContext context);
        /// <summary>
        /// Visit a parse tree produced by the <c>PostDecreaseExpression</c>
        /// labeled alternative in <see cref="JavaScriptParser.singleExpression"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitPostDecreaseExpression([NotNull] JavaScriptParser.PostDecreaseExpressionContext context);
        /// <summary>
        /// Visit a parse tree produced by the <c>TypeofExpression</c>
        /// labeled alternative in <see cref="JavaScriptParser.singleExpression"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitTypeofExpression([NotNull] JavaScriptParser.TypeofExpressionContext context);
        /// <summary>
        /// Visit a parse tree produced by the <c>InstanceofExpression</c>
        /// labeled alternative in <see cref="JavaScriptParser.singleExpression"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitInstanceofExpression([NotNull] JavaScriptParser.InstanceofExpressionContext context);
        /// <summary>
        /// Visit a parse tree produced by the <c>UnaryPlusExpression</c>
        /// labeled alternative in <see cref="JavaScriptParser.singleExpression"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitUnaryPlusExpression([NotNull] JavaScriptParser.UnaryPlusExpressionContext context);
        /// <summary>
        /// Visit a parse tree produced by the <c>DeleteExpression</c>
        /// labeled alternative in <see cref="JavaScriptParser.singleExpression"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitDeleteExpression([NotNull] JavaScriptParser.DeleteExpressionContext context);
        /// <summary>
        /// Visit a parse tree produced by the <c>ArrowFunctionExpression</c>
        /// labeled alternative in <see cref="JavaScriptParser.singleExpression"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitArrowFunctionExpression([NotNull] JavaScriptParser.ArrowFunctionExpressionContext context);
        /// <summary>
        /// Visit a parse tree produced by the <c>EqualityExpression</c>
        /// labeled alternative in <see cref="JavaScriptParser.singleExpression"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitEqualityExpression([NotNull] JavaScriptParser.EqualityExpressionContext context);
        /// <summary>
        /// Visit a parse tree produced by the <c>BitXOrExpression</c>
        /// labeled alternative in <see cref="JavaScriptParser.singleExpression"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitBitXOrExpression([NotNull] JavaScriptParser.BitXOrExpressionContext context);
        /// <summary>
        /// Visit a parse tree produced by the <c>SuperExpression</c>
        /// labeled alternative in <see cref="JavaScriptParser.singleExpression"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitSuperExpression([NotNull] JavaScriptParser.SuperExpressionContext context);
        /// <summary>
        /// Visit a parse tree produced by the <c>MultiplicativeExpression</c>
        /// labeled alternative in <see cref="JavaScriptParser.singleExpression"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitMultiplicativeExpression([NotNull] JavaScriptParser.MultiplicativeExpressionContext context);
        /// <summary>
        /// Visit a parse tree produced by the <c>BitShiftExpression</c>
        /// labeled alternative in <see cref="JavaScriptParser.singleExpression"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitBitShiftExpression([NotNull] JavaScriptParser.BitShiftExpressionContext context);
        /// <summary>
        /// Visit a parse tree produced by the <c>ParenthesizedExpression</c>
        /// labeled alternative in <see cref="JavaScriptParser.singleExpression"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitParenthesizedExpression([NotNull] JavaScriptParser.ParenthesizedExpressionContext context);
        /// <summary>
        /// Visit a parse tree produced by the <c>AdditiveExpression</c>
        /// labeled alternative in <see cref="JavaScriptParser.singleExpression"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitAdditiveExpression([NotNull] JavaScriptParser.AdditiveExpressionContext context);
        /// <summary>
        /// Visit a parse tree produced by the <c>RelationalExpression</c>
        /// labeled alternative in <see cref="JavaScriptParser.singleExpression"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitRelationalExpression([NotNull] JavaScriptParser.RelationalExpressionContext context);
        /// <summary>
        /// Visit a parse tree produced by the <c>PostIncrementExpression</c>
        /// labeled alternative in <see cref="JavaScriptParser.singleExpression"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitPostIncrementExpression([NotNull] JavaScriptParser.PostIncrementExpressionContext context);
        /// <summary>
        /// Visit a parse tree produced by the <c>BitNotExpression</c>
        /// labeled alternative in <see cref="JavaScriptParser.singleExpression"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitBitNotExpression([NotNull] JavaScriptParser.BitNotExpressionContext context);
        /// <summary>
        /// Visit a parse tree produced by the <c>NewExpression</c>
        /// labeled alternative in <see cref="JavaScriptParser.singleExpression"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitNewExpression([NotNull] JavaScriptParser.NewExpressionContext context);
        /// <summary>
        /// Visit a parse tree produced by the <c>LiteralExpression</c>
        /// labeled alternative in <see cref="JavaScriptParser.singleExpression"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitLiteralExpression([NotNull] JavaScriptParser.LiteralExpressionContext context);
        /// <summary>
        /// Visit a parse tree produced by the <c>ArrayLiteralExpression</c>
        /// labeled alternative in <see cref="JavaScriptParser.singleExpression"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitArrayLiteralExpression([NotNull] JavaScriptParser.ArrayLiteralExpressionContext context);
        /// <summary>
        /// Visit a parse tree produced by the <c>MemberDotExpression</c>
        /// labeled alternative in <see cref="JavaScriptParser.singleExpression"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitMemberDotExpression([NotNull] JavaScriptParser.MemberDotExpressionContext context);
        /// <summary>
        /// Visit a parse tree produced by the <c>ClassExpression</c>
        /// labeled alternative in <see cref="JavaScriptParser.singleExpression"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitClassExpression([NotNull] JavaScriptParser.ClassExpressionContext context);
        /// <summary>
        /// Visit a parse tree produced by the <c>MemberIndexExpression</c>
        /// labeled alternative in <see cref="JavaScriptParser.singleExpression"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitMemberIndexExpression([NotNull] JavaScriptParser.MemberIndexExpressionContext context);
        /// <summary>
        /// Visit a parse tree produced by the <c>IdentifierExpression</c>
        /// labeled alternative in <see cref="JavaScriptParser.singleExpression"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitIdentifierExpression([NotNull] JavaScriptParser.IdentifierExpressionContext context);
        /// <summary>
        /// Visit a parse tree produced by the <c>BitAndExpression</c>
        /// labeled alternative in <see cref="JavaScriptParser.singleExpression"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitBitAndExpression([NotNull] JavaScriptParser.BitAndExpressionContext context);
        /// <summary>
        /// Visit a parse tree produced by the <c>BitOrExpression</c>
        /// labeled alternative in <see cref="JavaScriptParser.singleExpression"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitBitOrExpression([NotNull] JavaScriptParser.BitOrExpressionContext context);
        /// <summary>
        /// Visit a parse tree produced by the <c>AssignmentOperatorExpression</c>
        /// labeled alternative in <see cref="JavaScriptParser.singleExpression"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitAssignmentOperatorExpression([NotNull] JavaScriptParser.AssignmentOperatorExpressionContext context);
        /// <summary>
        /// Visit a parse tree produced by the <c>VoidExpression</c>
        /// labeled alternative in <see cref="JavaScriptParser.singleExpression"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitVoidExpression([NotNull] JavaScriptParser.VoidExpressionContext context);
        /// <summary>
        /// Visit a parse tree produced by <see cref="JavaScriptParser.arrowFunctionParameters"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitArrowFunctionParameters([NotNull] JavaScriptParser.ArrowFunctionParametersContext context);
        /// <summary>
        /// Visit a parse tree produced by <see cref="JavaScriptParser.arrowFunctionBody"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitArrowFunctionBody([NotNull] JavaScriptParser.ArrowFunctionBodyContext context);
        /// <summary>
        /// Visit a parse tree produced by <see cref="JavaScriptParser.assignmentOperator"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitAssignmentOperator([NotNull] JavaScriptParser.AssignmentOperatorContext context);
        /// <summary>
        /// Visit a parse tree produced by <see cref="JavaScriptParser.literal"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitLiteral([NotNull] JavaScriptParser.LiteralContext context);
        /// <summary>
        /// Visit a parse tree produced by <see cref="JavaScriptParser.numericLiteral"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitNumericLiteral([NotNull] JavaScriptParser.NumericLiteralContext context);
        /// <summary>
        /// Visit a parse tree produced by <see cref="JavaScriptParser.identifierName"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitIdentifierName([NotNull] JavaScriptParser.IdentifierNameContext context);
        /// <summary>
        /// Visit a parse tree produced by <see cref="JavaScriptParser.reservedWord"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitReservedWord([NotNull] JavaScriptParser.ReservedWordContext context);
        /// <summary>
        /// Visit a parse tree produced by <see cref="JavaScriptParser.keyword"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitKeyword([NotNull] JavaScriptParser.KeywordContext context);
        /// <summary>
        /// Visit a parse tree produced by <see cref="JavaScriptParser.getter"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitGetter([NotNull] JavaScriptParser.GetterContext context);
        /// <summary>
        /// Visit a parse tree produced by <see cref="JavaScriptParser.setter"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitSetter([NotNull] JavaScriptParser.SetterContext context);
        /// <summary>
        /// Visit a parse tree produced by <see cref="JavaScriptParser.eos"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitEos([NotNull] JavaScriptParser.EosContext context);
    }
}